{"version":3,"file":"popup.c46a69e4796874861b89.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAKA;;AA3GA;;AA6GA;AAAA;;;;;;;;;;AA7GA;;;;;;;;;;;;;;;;;ACTA","sources":["webpack://chrome-extension-boilerplate-react/./src/pages/Popup/pages/SendToken/SendToken.jsx","webpack://chrome-extension-boilerplate-react/webpack/runtime/getFullHash"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './SendToken.css';\nimport {useRecoilValue, useSetRecoilState} from \"recoil\";\nimport {pageState, pairState} from \"../../recoil/index\";\nimport Header from '../../component/Header/Header';\nimport Footer from '../../component/Footer/Footer';\nimport { SDK } from '../../modules/sdk';\nimport { Polygon } from '../../modules/Polygon';\n\nconst SendToken = () => {\n    const setPageState = useSetRecoilState(pageState);\n    const pair = useRecoilValue(pairState);\n\n    const [toAddress, setToAddress] = useState('');\n    const [amount, setAmount] = useState('');\n    const [disabled, setDisabled] = useState(true);\n    const [pubkey, setPubkey] = useState('');\n    const [balance, setBalance] = useState('pending');\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        const addressOfPub = SDK.getAddress(pair.getPublicKey());\n        getBalance(addressOfPub);\n        setPubkey(addressOfPub);\n    }, []);\n\n    useEffect(() => {\n        if(checkSuiAddressVerify(toAddress) && checkAmount(amount)){\n            setDisabled(false);\n        }else{\n            setDisabled(true);\n        }\n    }, [toAddress, amount]);\n\n    const getBalance = async (publickKey) => {\n        setBalance('pending');\n        setBalance(await Polygon.getTokenBalances());\n    }\n\n    /*\n    * 화면에서 상대방 공개키 + 보내는 sui 받아서 송금 실행 \n    */\n    const send = async () => {\n        try{\n            setMessage(\"...\");\n            //공개키 메인에서 페이지 전환 시 전달 받을 것, \n            // const result = await SDK.sendToken(pair, pubkey, toAddress, amount);\n            const result = await Polygon.sendDWT();\n            setDisabled(true);\n            setToAddress('');\n            setAmount('');\n            setMessage(`digest : ${result.EffectsCert.certificate.transactionDigest}`);\n        }catch(e){\n            console.log(e);\n            setMessage(\"Transaction failed to send\");\n        }\n    }\n\n    /*\n    * 상대방의 주소가 입력되면 계좌 검증을 통해, 검증 결과가 true인 경우 송금 버튼을 활성화\n    */\n    const checkSuiAddressVerify = (_toAddress) => {\n        //입력받은 pubkey 검증\n        if(_toAddress !== '' && _toAddress.length === 42){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    const checkAmount = (_amount) => {\n        try{\n            if(_amount === ''){\n                throw 'empty';\n            }\n\n            if(isNaN(Number(_amount)) === true){\n                throw 'NaN';\n            }\n\n            return true;\n        }catch(e){\n            return false;\n        }\n    }\n\n\nreturn (\n    <div className=\"Send\">\n        <Header />\n\n        <div className=\"Send-title\">SendToken</div> \n\n        <div className='Send-Address-input-subtitle'>Enter or search the address of the recepient below to start sending coins.</div>\n\n        <input className='Send-Address-input' value={toAddress} onChange={(e) => setToAddress(e.target.value)} name=\"toaddress\" placeholder=\"Address\"></input>\n        <input className='Send-Amuount-input' value={amount} onChange={(e) => setAmount(e.target.value)}name=\"amount\" placeholder=\"Amount\"></input>       \n        \n        <div className=\"balance-check\">\n            <div style={{'display': 'flex', 'justifyContent': 'space-between', 'alignItems': 'center'}}>\n                <div>Available</div>\n                <button className='refresh-btn' onClick={() => getBalance(pubkey)}>refresh</button>\n            </div>\n            <div className='balance'>{balance === 'pending' ? '...' : '0.'+ balance}  DWT</div>\n        </div>\n\n        <div className='result-box'>\n            <div>Result</div>\n            <div className=\"sent-message\">{message}</div>   \n        </div>\n\n        <button className={`submit-button-${disabled}`} onClick={send} type=\"submit\">Transfer DWT</button>\n\n        <Footer />\n    </div>);\n\n}\n\nexport default SendToken;","__webpack_require__.h = () => (\"e728d44c5b2c2b257df7\")"],"names":[],"sourceRoot":""}